(define (multiple-dwelling)
    (let ((baker (amb 1 2 3 4 5)) (cooper (amb 1 2 3 4 5))
    (fletcher (amb 1 2 3 4 5)) (miller (amb 1 2 3 4 5))
    (smith (amb 1 2 3 4 5)))
    (require (distinct? (list baker cooper fletcher miller smith)))
    (require (not (= baker 5)))
    (require (not (= cooper 1)))
    (require (not (= fletcher 5)))
    (require (not (= fletcher 1)))
    (require (> miller cooper))
    (require (not (= (abs (- smith fletcher)) 1)))
    (require (not (= (abs (- fletcher cooper)) 1)))
    (list (list 'baker baker)
        (list 'cooper cooper)
        (list 'fletcher fletcher) (list 'miller miller)
        (list 'smith smith))))

(define (schoolgirls)
    (let ((betty  (amb 1 2 3 4 5)) (ethel (amb 1 2 3 4 5))
    (joan  (amb 1 2 3 4 5)) (kitty (amb 1 2 3 4 5))
    (mary  (amb 1 2 3 4 5)))
    (require (xor (= kitty 2) (= betty 3)))
    (require (xor (= ethel 1) (= joan 2)))
    (require (xor (= joan 3) (= ethel 5)))
    (require (xor (= kitty 2) (= mary 4)))
    (require (xor (= mary 4) (= betty 1)))
    (require (distinct? (list betty ethel joan kitty mary)))
    (list (list 'betty betty)
            (list 'ethel ethel)
            (list 'joan joan) (list 'kitty  kitty)
            (list 'mary mary))))


(define (xor a b) (if a (not b) b))