(define (average x y) (/ (+ x y) 2))
(define (close-enough? x y)
  (< (abs (- x y)) 0.001))

(define tolerance 0.00001)
(define (fixed-point f first-guess)
    (newline)
    (display first-guess)
    (define (close-enough? v1 v2)
        (< (abs (- v1 v2)) tolerance))
    (define (try guess)
        (newline)
        (display guess)
         (let ((next (f guess)))
        (if (close-enough? guess next)
            next
            (try next))))
    (try first-guess))

; (fixed-point (lambda (x) (/ (log 10000) (log x))) 2.0)
; (fixed-point (lambda (x) (/ (log 10000) (log x))) 6.0)
(fixed-point (lambda (x) (/ (log 10000) (log x))) 5.4)
(fixed-point (lambda (x) (average x (/ (log 10000) (log x)))) 6.0)
